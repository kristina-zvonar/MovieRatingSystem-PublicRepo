// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieRatingSystem.Repository.DB;

namespace MovieRatingSystem.Repository.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20210610135204_Seed2")]
    partial class Seed2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("MovieRatingSystem.Shared.DB.Actor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstName = "Tim",
                            LastName = "Robbins"
                        },
                        new
                        {
                            ID = 2,
                            FirstName = "Morgan",
                            LastName = "Freeman"
                        },
                        new
                        {
                            ID = 3,
                            FirstName = "Al",
                            LastName = "Pacino"
                        },
                        new
                        {
                            ID = 4,
                            FirstName = "Marlon",
                            LastName = "Brando"
                        },
                        new
                        {
                            ID = 5,
                            FirstName = "Robert",
                            LastName = "De Niro"
                        },
                        new
                        {
                            ID = 6,
                            FirstName = "Christian",
                            LastName = "Bale"
                        },
                        new
                        {
                            ID = 7,
                            FirstName = "Heath",
                            LastName = "Ledger"
                        },
                        new
                        {
                            ID = 8,
                            FirstName = "Henry",
                            LastName = "Fonda"
                        },
                        new
                        {
                            ID = 9,
                            FirstName = "Lee J",
                            LastName = "Cobb"
                        },
                        new
                        {
                            ID = 10,
                            FirstName = "Liam",
                            LastName = "Neeson"
                        },
                        new
                        {
                            ID = 11,
                            FirstName = "Ralph",
                            LastName = "Fiennes"
                        },
                        new
                        {
                            ID = 12,
                            FirstName = "John",
                            LastName = "Travolta"
                        },
                        new
                        {
                            ID = 13,
                            FirstName = "Uma",
                            LastName = "Thurman"
                        },
                        new
                        {
                            ID = 14,
                            FirstName = "Samuel L.",
                            LastName = "Jackson"
                        },
                        new
                        {
                            ID = 15,
                            FirstName = "Clint",
                            LastName = "Eastwood"
                        },
                        new
                        {
                            ID = 16,
                            FirstName = "Elli",
                            LastName = "Wallach"
                        },
                        new
                        {
                            ID = 17,
                            FirstName = "Brad",
                            LastName = "Pitt"
                        },
                        new
                        {
                            ID = 18,
                            FirstName = "Edward",
                            LastName = "Norton"
                        },
                        new
                        {
                            ID = 19,
                            FirstName = "Elijah",
                            LastName = "Wood"
                        },
                        new
                        {
                            ID = 20,
                            FirstName = "Viggo",
                            LastName = "Mortensen"
                        });
                });

            modelBuilder.Entity("MovieRatingSystem.Shared.DB.Content", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CoverImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Contents");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CoverImage = "https://m.media-amazon.com/images/G/01/imdb/images/social/imdb_logo._CB410901634_.png",
                            Description = "Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency.",
                            ReleaseDate = new DateTime(1994, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Shawshank Redemption",
                            Type = 1
                        },
                        new
                        {
                            ID = 2,
                            CoverImage = "https://m.media-amazon.com/images/G/01/imdb/images/social/imdb_logo._CB410901634_.png",
                            Description = "An organized crime dynasty's aging patriarch transfers control of his clandestine empire to his reluctant son.",
                            ReleaseDate = new DateTime(1972, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Godfather",
                            Type = 1
                        },
                        new
                        {
                            ID = 3,
                            CoverImage = "https://m.media-amazon.com/images/G/01/imdb/images/social/imdb_logo._CB410901634_.png",
                            Description = "The early life and career of Vito Corleone in 1920s New York City is portrayed, while his son, Michael, expands and tightens his grip on the family crime syndicate.",
                            ReleaseDate = new DateTime(1974, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Godfather - Part II",
                            Type = 1
                        },
                        new
                        {
                            ID = 4,
                            CoverImage = "https://m.media-amazon.com/images/G/01/imdb/images/social/imdb_logo._CB410901634_.png",
                            Description = "When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, Batman must accept one of the greatest psychological and physical tests of his ability to fight injustice.",
                            ReleaseDate = new DateTime(2008, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Dark Knight",
                            Type = 1
                        },
                        new
                        {
                            ID = 5,
                            CoverImage = "https://m.media-amazon.com/images/G/01/imdb/images/social/imdb_logo._CB410901634_.png",
                            Description = "A jury holdout attempts to prevent a miscarriage of justice by forcing his colleagues to reconsider the evidence.",
                            ReleaseDate = new DateTime(1957, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "12 Angry Men",
                            Type = 1
                        },
                        new
                        {
                            ID = 6,
                            CoverImage = "https://m.media-amazon.com/images/G/01/imdb/images/social/imdb_logo._CB410901634_.png",
                            Description = "In German-occupied Poland during World War II, industrialist Oskar Schindler gradually becomes concerned for his Jewish workforce after witnessing their persecution by the Nazis.",
                            ReleaseDate = new DateTime(1993, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Schindler's List",
                            Type = 1
                        },
                        new
                        {
                            ID = 7,
                            CoverImage = "https://m.media-amazon.com/images/G/01/imdb/images/social/imdb_logo._CB410901634_.png",
                            Description = "While Frodo and Sam edge closer to Mordor with the help of the shifty Gollum, the divided fellowship makes a stand against Sauron's new ally, Saruman, and his hordes of Isengard.",
                            ReleaseDate = new DateTime(2002, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Two Towers",
                            Type = 1
                        },
                        new
                        {
                            ID = 8,
                            CoverImage = "https://m.media-amazon.com/images/G/01/imdb/images/social/imdb_logo._CB410901634_.png",
                            Description = "Gandalf and Aragorn lead the World of Men against Sauron's army to draw his gaze from Frodo and Sam as they approach Mount Doom with the One Ring.",
                            ReleaseDate = new DateTime(2003, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Return of the King",
                            Type = 1
                        },
                        new
                        {
                            ID = 9,
                            CoverImage = "https://m.media-amazon.com/images/G/01/imdb/images/social/imdb_logo._CB410901634_.png",
                            Description = "The lives of two mob hitmen, a boxer, a gangster and his wife, and a pair of diner bandits intertwine in four tales of violence and redemption.",
                            ReleaseDate = new DateTime(1994, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Pulp Fiction",
                            Type = 1
                        },
                        new
                        {
                            ID = 10,
                            CoverImage = "https://m.media-amazon.com/images/G/01/imdb/images/social/imdb_logo._CB410901634_.png",
                            Description = "An insomniac office worker and a devil-may-care soap maker form an underground fight club that evolves into much more.",
                            ReleaseDate = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Fight Club",
                            Type = 1
                        },
                        new
                        {
                            ID = 11,
                            CoverImage = "https://m.media-amazon.com/images/G/01/imdb/images/social/imdb_logo._CB410901634_.png",
                            Description = "A bounty hunting scam joins two men in an uneasy alliance against a third in a race to find a fortune in gold buried in a remote cemetery.",
                            ReleaseDate = new DateTime(1966, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Good, the Bad, and the Ugly",
                            Type = 1
                        },
                        new
                        {
                            ID = 12,
                            CoverImage = "https://m.media-amazon.com/images/G/01/imdb/images/social/imdb_logo._CB410901634_.png",
                            Description = "A meek Hobbit from the Shire and eight companions set out on a journey to destroy the powerful One Ring and save Middle-earth from the Dark Lord Sauron.",
                            ReleaseDate = new DateTime(2002, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Fellowship of the Ring",
                            Type = 1
                        });
                });

            modelBuilder.Entity("MovieRatingSystem.Shared.DB.ContentActor", b =>
                {
                    b.Property<int>("ActorID")
                        .HasColumnType("int");

                    b.Property<int>("ContentID")
                        .HasColumnType("int");

                    b.HasKey("ActorID", "ContentID");

                    b.HasIndex("ContentID");

                    b.ToTable("content_actor");

                    b.HasData(
                        new
                        {
                            ActorID = 1,
                            ContentID = 1
                        },
                        new
                        {
                            ActorID = 2,
                            ContentID = 1
                        },
                        new
                        {
                            ActorID = 3,
                            ContentID = 2
                        },
                        new
                        {
                            ActorID = 4,
                            ContentID = 2
                        },
                        new
                        {
                            ActorID = 4,
                            ContentID = 3
                        },
                        new
                        {
                            ActorID = 5,
                            ContentID = 3
                        },
                        new
                        {
                            ActorID = 6,
                            ContentID = 4
                        },
                        new
                        {
                            ActorID = 7,
                            ContentID = 4
                        },
                        new
                        {
                            ActorID = 8,
                            ContentID = 5
                        },
                        new
                        {
                            ActorID = 9,
                            ContentID = 5
                        },
                        new
                        {
                            ActorID = 10,
                            ContentID = 6
                        },
                        new
                        {
                            ActorID = 11,
                            ContentID = 6
                        },
                        new
                        {
                            ActorID = 19,
                            ContentID = 7
                        },
                        new
                        {
                            ActorID = 20,
                            ContentID = 7
                        },
                        new
                        {
                            ActorID = 19,
                            ContentID = 8
                        },
                        new
                        {
                            ActorID = 20,
                            ContentID = 8
                        },
                        new
                        {
                            ActorID = 12,
                            ContentID = 9
                        },
                        new
                        {
                            ActorID = 13,
                            ContentID = 9
                        },
                        new
                        {
                            ActorID = 14,
                            ContentID = 9
                        },
                        new
                        {
                            ActorID = 17,
                            ContentID = 10
                        },
                        new
                        {
                            ActorID = 18,
                            ContentID = 10
                        },
                        new
                        {
                            ActorID = 15,
                            ContentID = 11
                        },
                        new
                        {
                            ActorID = 16,
                            ContentID = 11
                        },
                        new
                        {
                            ActorID = 19,
                            ContentID = 12
                        },
                        new
                        {
                            ActorID = 20,
                            ContentID = 12
                        });
                });

            modelBuilder.Entity("MovieRatingSystem.Shared.DB.ContentRating", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ContentID")
                        .HasColumnType("int");

                    b.Property<int>("Star")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("ContentID");

                    b.ToTable("ContentRating");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ContentID = 1,
                            Star = 4
                        },
                        new
                        {
                            ID = 2,
                            ContentID = 1,
                            Star = 5
                        },
                        new
                        {
                            ID = 3,
                            ContentID = 2,
                            Star = 5
                        },
                        new
                        {
                            ID = 4,
                            ContentID = 3,
                            Star = 5
                        },
                        new
                        {
                            ID = 5,
                            ContentID = 3,
                            Star = 5
                        },
                        new
                        {
                            ID = 6,
                            ContentID = 3,
                            Star = 4
                        });
                });

            modelBuilder.Entity("MovieRatingSystem.Shared.DB.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Password = "AQAAAAEAACcQAAAAEFaiGDinBLfYXnCmXi09NvroKsGR96Il6rfPQVAwGtDZyDmesY2vHoUuY6+zkoJ1gQ==",
                            Username = "clientapp"
                        });
                });

            modelBuilder.Entity("MovieRatingSystem.Shared.DB.ContentActor", b =>
                {
                    b.HasOne("MovieRatingSystem.Shared.DB.Actor", "Actor")
                        .WithMany("ActorContent")
                        .HasForeignKey("ActorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieRatingSystem.Shared.DB.Content", "Content")
                        .WithMany("ContentActors")
                        .HasForeignKey("ContentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Content");
                });

            modelBuilder.Entity("MovieRatingSystem.Shared.DB.ContentRating", b =>
                {
                    b.HasOne("MovieRatingSystem.Shared.DB.Content", "Content")
                        .WithMany("Ratings")
                        .HasForeignKey("ContentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");
                });

            modelBuilder.Entity("MovieRatingSystem.Shared.DB.Actor", b =>
                {
                    b.Navigation("ActorContent");
                });

            modelBuilder.Entity("MovieRatingSystem.Shared.DB.Content", b =>
                {
                    b.Navigation("ContentActors");

                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
